{"version":3,"sources":["Snake.js","Food.js","Button.js","Display.js","Canvas.js","index.js"],"names":["Snake","_ref","cellSize","left","top","react_default","a","createElement","className","style","width","concat","height","Food","Button","handleClick","e","_this","props","direction","this","onClick","Component","Display","speed","count","Canvas","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","appConfig","INITIALSPEED","componentDidMount","document","addEventListener","changeDirection","createInterval","clearInterval","interval","setInterval","snakeMove","dir","state","x","y","newSnake","toConsumableArray","snake","snakeElem","CANVASWIDTH","CANVASHEIGHT","isColliding","setState","food","unshift","newFood","Math","floor","random","splice","elem","filter","oldSnakeElement","JSON","stringify","length","setDirection","key","canvasWidth","CELLSIZE","canvasHeight","_this2","src_Display","map","index","src_Snake_0","src_Food_0","src_Button_0","App","src_Canvas_0","ReactDOM","render","src_App_0","querySelector"],"mappings":"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","file":"static/js/main.7c51ef23.chunk.js","sourcesContent":["import React from 'react';\nimport './Snake.css';\n\nconst Snake = ({cellSize, left, top}) => {\n  return <div className=\"snake\" style={{ width: `${cellSize}px`, height: `${cellSize}px`, left: `${left}px`, top: `${top}px` }}></div>\n}\n\nexport default Snake;","import React from 'react';\nimport './Food.css';\n\nconst Food = ({cellSize, left, top}) => {\n  return <div className=\"food\" style={{ width: `${cellSize}px`, height: `${cellSize}px`, left: `${left}px`, top: `${top}px` }}></div>\n}\n\nexport default Food;","import React, {Component} from 'react';\nimport './Button.css';\n\nclass Button extends Component {\n  handleClick = (e) => {\n    this.props.handleClick(this.props.direction);\n  }\n\n  render(){\n    return <div className={`button-${this.props.direction} button`} onClick={this.handleClick}></div>;\n  }\n}\n\nexport default Button;","import React from 'react';\n\nconst Display = ({speed, count}) => {\n  return <div>\n    Speed: {speed},\n    Count: {count}\n  </div>;\n}\n\nexport default Display;","import React, {Component} from 'react';\nimport './Canvas.css';\nimport Snake from './Snake';\nimport Food from './Food';\nimport Button from './Button';\nimport Display from './Display';\n\nclass Canvas extends Component {\n\n  speed = this.props.appConfig.INITIALSPEED;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      snake : [\n        {x:2, y:3 },\n        {x:2, y:4 },\n        {x:2, y:5 },\n      ], \n      food : {x:5, y:2,},\n      direction: \"up\",\n      count: 0,\n    };\n\n    this.canvasWidth = props.appConfig.CANVASWIDTH * props.appConfig.CELLSIZE;\n    this.canvasHeight= props.appConfig.CANVASHEIGHT * props.appConfig.CELLSIZE;\n    this.cellSize = props.appConfig.CELLSIZE;\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('keydown', this.changeDirection);\n    this.createInterval()\n  }\n\n  createInterval = () => {\n    clearInterval(this.interval)\n    this.interval = setInterval(this.snakeMove, this.speed);\n  }\n\n  snakeMove = () => {\n    let dir;\n\n    switch(this.state.direction){\n      case \"right\": dir = { x:1, y:0, }; break;\n      case \"down\": dir= { x:0, y:1, }; break;\n      case \"left\": dir = { x:-1, y:0, }; break;\n      case \"up\": dir = { x:0, y:-1, }; break;\n      default: return; \n    }\n\n    const newSnake = [...this.state.snake];\n    const snakeElem = { x: newSnake[0].x+dir.x, y: newSnake[0].y+dir.y };\n\n    // prevent crash with canvas\n    if(snakeElem.x >= this.props.appConfig.CANVASWIDTH){\n      snakeElem.x = 0;\n    }\n    if(snakeElem.y >= this.props.appConfig.CANVASHEIGHT){\n      snakeElem.y = 0;\n    }\n    if(snakeElem.x < 0){\n      snakeElem.x = this.props.appConfig.CANVASWIDTH-1;\n    }\n    if(snakeElem.y < 0){\n      snakeElem.y = this.props.appConfig.CANVASHEIGHT-1;\n    }\n\n    let isColliding = this.isColliding(snakeElem);\n\n    // reset the game\n    if (isColliding){\n      this.speed = this.props.appConfig.INITIALSPEED;\n      this.createInterval();\n      this.setState({\n        snake : [\n          {x:2, y:3 },\n          {x:2, y:4 },\n          {x:2, y:5 },\n        ], \n        food : {x:5, y:2,},\n        direction: \"up\",\n        count: 0, \n      });\n      return;\n    };\n\n    newSnake.unshift(snakeElem);\n\n\n    // find food\n    if (snakeElem.x === this.state.food.x && snakeElem.y === this.state.food.y){\n      let newFood = {\n        x : Math.floor(Math.random() * this.props.appConfig.CANVASWIDTH),\n        y : Math.floor(Math.random() * this.props.appConfig.CANVASHEIGHT),\n      }\n\n      while(this.isColliding(newFood)){\n        newFood = {\n          x : Math.floor(Math.random() * this.props.appConfig.CANVASWIDTH),\n          y : Math.floor(Math.random() * this.props.appConfig.CANVASHEIGHT),\n        }\n      }\n\n      this.setState({\n        food : newFood,\n        count : this.state.count + 50,\n      });\n\n      this.speed = Math.floor(this.speed * 0.95);\n      this.createInterval();\n\n    } else {\n      newSnake.splice(-1,1);\n    }\n\n    this.setState({snake:newSnake});\n  };\n\n  isColliding = (elem) => {\n    const filtered = this.state.snake.filter((oldSnakeElement) => {\n      if (JSON.stringify(oldSnakeElement) === JSON.stringify(elem)) {\n        return true;\n      }\n      return false\n    })\n\n    return filtered.length\n  };\n\n  handleClick = direction => {\n    this.setDirection(direction);\n  };\n\n  changeDirection = e => {\n    this.setDirection(e.key);\n  };\n\n  setDirection = (direction) => {\n    switch(direction){\n      case \"ArrowRight\": if(this.state.direction !== \"left\") { this.setState({ direction: \"right\" }); } break;\n      case \"ArrowDown\": if(this.state.direction !== \"up\") { this.setState({ direction: \"down\" }); } break;\n      case \"ArrowLeft\": if(this.state.direction !== \"right\") { this.setState({ direction: \"left\" }); } break;\n      case \"ArrowUp\": if(this.state.direction !== \"down\") { this.setState({ direction: \"up\" }); } break;\n      default: return; \n    }\n  }\n \n  render(){\n    return (\n      <div>\n        <Display speed={this.speed} count={this.state.count}/>\n        <div className=\"canvas\" style={{ width: `${this.canvasWidth}px`, height: `${this.canvasHeight}px`}} >\n          {this.state.snake.map((snake, index) => (\n            <Snake\n              key={`snake-elem-${index}`}\n              cellSize={this.cellSize}\n              left={this.cellSize * snake.x}\n              top={this.cellSize * snake.y}\n            />\n          ))}\n          <Food\n            cellSize={this.cellSize}\n            left={this.cellSize * this.state.food.x}\n            top={this.cellSize * this.state.food.y}\n          />\n          <Button direction=\"ArrowRight\" handleClick={this.handleClick} />\n          <Button direction=\"ArrowDown\" handleClick={this.handleClick} />\n          <Button direction=\"ArrowLeft\" handleClick={this.handleClick} />\n          <Button direction=\"ArrowUp\" handleClick={this.handleClick} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Canvas;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Canvas from './Canvas';\nimport './App.css';\n\nclass App extends Component {\n\n  appConfig = {\n    CANVASWIDTH: 18,\n    CANVASHEIGHT: 18,\n    CELLSIZE: 22,\n    INITIALSPEED: 300,\n  };\n\n  render(){\n    return <div className=\"app\">\n      <Canvas appConfig={this.appConfig} />\n    </div>\n  }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n\n"],"sourceRoot":""}